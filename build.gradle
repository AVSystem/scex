task wrapper(type: Wrapper) {
    gradleVersion = "2.1"
}

apply plugin: 'maven'

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group = "com.avsystem"
    version = '1.14.7'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    configurations {
        deployerJars
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext.scalaVersion = '2.11.4'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

idea.project.ipr.withXml {
    it.asNode().component.find { it.@name == "VcsDirectoryMappings" }.mapping.@vcs = "hg4idea"
}

dependencies {
    deployerJars("org.apache.maven.wagon:wagon-http:2.2")

    compile("org.scala-lang:scala-library:$scalaVersion")
    compile("org.scala-lang:scala-reflect:$scalaVersion")
    compile("org.scala-lang:scala-compiler:$scalaVersion")

    compile("com.google.guava:guava:14.0.1")
    compile("com.google.code.findbugs:jsr305:2.0.1")
}

project("scex-core") {
    apply plugin: 'scala'

    dependencies {
        compile("org.scala-lang:scala-library:$scalaVersion")
        compile("org.scala-lang:scala-reflect:$scalaVersion")
        compile("org.scala-lang:scala-compiler:$scalaVersion")

        compile("com.google.guava:guava:14.0.1")
        compile("com.google.code.findbugs:jsr305:2.0.1")
        compile("org.slf4j:slf4j-api:1.6.4")
        compile("ch.qos.logback:logback-core:1.0.6")
        compile("ch.qos.logback:logback-classic:1.0.6")
        compile("commons-codec:commons-codec:1.7")

        testCompile("org.scalatest:scalatest_2.11:2.1.3")
    }
}

project("scex-derived") {
    apply plugin: 'scala'

    dependencies {
        compile("org.scala-lang:scala-library:$scalaVersion")

        compile(project(":scex-core"))

        testCompile("junit:junit:4.11")
        testCompile("org.scalatest:scalatest_2.11:2.1.3")
    }
}

project("scex-test") {
    apply plugin: 'scala'

    dependencies {
        compile "org.scala-lang:scala-library:$scalaVersion"

        compile(project(":scex-core"))
        compile(project(":scex-derived"))
        compile("com.vaadin:vaadin:6.8.13")
        compile("org.eclipse.jetty:jetty-server:9.1.0.v20131115")
        compile("org.eclipse.jetty:jetty-servlet:9.1.0.v20131115")

        testCompile("junit:junit:4.11")
        testCompile("org.scalatest:scalatest_2.11:2.1.3")
    }
}

project("scex-java-test") {
    dependencies {
        compile(project(":scex-core"))
        compile(project(":scex-derived"))
    }
}

def projectParts = [project(":scex-core"), project(":scex-derived")]

jar {
    dependsOn(projectParts.assemble)

    projectParts.each { proj ->
        from proj.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    dependsOn(projectParts.classes)

    projectParts.each { proj ->
        from proj.sourceSets.main.allSource
    }
}

artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: 'http://repo.avsystem.com/libs-releases-local/') {
                authentication(userName: artifactoryUser, password: artifactoryPassword)
            }
        }
    }
}
